'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _sass = require('sass.js/dist/sass.js');

var _sass2 = _interopRequireDefault(_sass);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _chReactAce = require('ch-react-ace');

var _chReactAce2 = _interopRequireDefault(_chReactAce);

require('ch-brace/mode/scss');

require('ch-brace/theme/tomorrow');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sass = void 0;

function getSass() {
  if (!sass) {
    return fetch('https://cdnjs.cloudflare.com/ajax/libs/sass.js/0.10.3/sass.worker.min.js').then(function (data) {
      return data.text();
    }).then(function (content) {
      var bb = new Blob([content], {
        type: 'text/javascript'
      });

      sass = new _sass2.default(window.URL.createObjectURL(bb));
      return sass;
    });
  }

  return Promise.resolve(sass);
}

var debounce = function debounce(func, wait) {
  var timer = null;

  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    timer && clearTimeout(timer);

    timer = setTimeout(function () {
      func.apply(undefined, args);
    }, wait);
  };
};

var STYLE = '\n.doc-wrapper .ace_editor {\n  margin: 10px auto;\n}\n\n.error-msg {\n  color: #c5695c;\n}\n';

var Doc = function (_Component) {
  _inherits(Doc, _Component);

  function Doc(props, ctx) {
    _classCallCheck(this, Doc);

    var _this = _possibleConstructorReturn(this, (Doc.__proto__ || Object.getPrototypeOf(Doc)).call(this, props, ctx));

    var debounceWaitTime = props.debounceWaitTime,
        code = props.code;


    _this.state = {
      code: props.code,
      errorMsg: ''
    };

    _this.handleCompile = debounce(_this.handleCompile.bind(_this), debounceWaitTime);
    _this.renderPreview = _this.renderPreview.bind(_this);
    return _this;
  }

  _createClass(Doc, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var code = this.props.code;


      this.handleCompile(code);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.code !== this.props.code && nextProps.code !== this.state.code) {
        this.setState({
          code: nextProps.code
        });
      }
    }
  }, {
    key: 'updateCode',
    value: function updateCode(updator) {
      var newCode = updator(this.state.code);

      this.handleCompile(newCode);
    }
  }, {
    key: 'handleCompile',
    value: function handleCompile(code) {
      var _this2 = this;

      this.setState({
        code: code
      });

      try {
        getSass().then(function (sass) {
          sass.compile(code, function (resule) {
            var parsedCode = resule.text;
            var errorMsg = resule.formatted;

            if (errorMsg) {
              _this2.setState({
                errorMsg: errorMsg
              });
            } else {
              _this2.setState({
                errorMsg: ''
              });

              _this2.renderPreview(parsedCode);
            }
          });
        });
      } catch (e) {
        this.setState({
          errorMsg: e.toString()
        });
        console.log(e.stack);
      }
    }
  }, {
    key: 'renderPreview',
    value: function renderPreview(preview) {
      var previewDom = _react2.default.createElement(
        'style',
        null,
        preview
      );

      if (this.props.previewContainer) {
        _reactDom2.default.render(previewDom, this.props.previewContainer);
      }

      if (this.props.reportElement) {
        this.props.reportElement(preview, previewDom);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          code = _props.code,
          className = _props.className,
          showGutter = _props.showGutter,
          onChange = _props.onChange,
          name = _props.name,
          rest = _objectWithoutProperties(_props, ['code', 'className', 'showGutter', 'onChange', 'name']);

      var errorMsg = this.state.errorMsg;


      return _react2.default.createElement(
        'div',
        { className: 'doc-wrapper ' + className },
        _react2.default.createElement(_chReactAce2.default, _extends({
          value: this.state.code,
          mode: 'scss',
          theme: 'tomorrow',
          width: '650px',
          tabSize: 2,
          name: name,
          showPrintMargin: false,
          showGutter: showGutter,
          setOptions: {
            useWorker: false
          },
          editorProps: {
            $blockScrolling: true
          },
          onChange: this.handleCompile
        }, rest)),
        _react2.default.createElement(
          'div',
          {
            className: 'doc-error'
          },
          errorMsg ? _react2.default.createElement(
            'span',
            { className: 'error-msg' },
            errorMsg
          ) : null
        ),
        _react2.default.createElement(
          'style',
          null,
          STYLE
        )
      );
    }
  }]);

  return Doc;
}(_react.Component);

Doc.propTypes = {
  code: _react.PropTypes.string,
  debounceWaitTime: _react.PropTypes.number,
  showGutter: _react.PropTypes.bool,
  name: _react.PropTypes.string
};
Doc.defaultProps = {
  debounceWaitTime: 500,
  showGutter: true,
  code: '',
  name: 'ace-scss-editor'
};
exports.default = Doc;