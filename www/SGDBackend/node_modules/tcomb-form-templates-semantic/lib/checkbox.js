'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _getLabel = require('./getLabel');

var _getLabel2 = _interopRequireDefault(_getLabel);

var _getError = require('./getError');

var _getError2 = _interopRequireDefault(_getError);

var _getHelp = require('./getHelp');

var _getHelp2 = _interopRequireDefault(_getHelp);

function create() {
  var overrides = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  function checkbox(locals) {
    locals.attrs = checkbox.getAttrs(locals);
    return checkbox.renderVertical(locals);
  }

  checkbox.getAttrs = overrides.getAttrs || function getAttrs(locals) {
    var attrs = _extends({}, locals.attrs);
    attrs.type = 'checkbox';
    attrs.disabled = locals.disabled;
    attrs.checked = locals.value;
    attrs.onChange = function (evt) {
      return locals.onChange(evt.target.checked);
    };
    if (locals.help) {
      attrs['aria-describedby'] = attrs['aria-describedby'] || attrs.id + '-tip';
    }
    return attrs;
  };

  checkbox.renderCheckbox = overrides.renderCheckbox || function renderCheckbox(locals) {
    return _react2['default'].createElement('input', locals.attrs);
  };

  checkbox.renderLabel = overrides.renderLabel || function renderLabel(locals) {
    return _getLabel2['default']({
      label: locals.label,
      htmlFor: locals.attrs.id
    });
  };

  checkbox.renderError = overrides.renderError || function renderError(locals) {
    return _getError2['default'](locals);
  };

  checkbox.renderHelp = overrides.renderHelp || function renderHelp(locals) {
    return _getHelp2['default'](locals);
  };

  checkbox.renderVertical = overrides.renderVertical || function renderVertical(locals) {
    var _className;

    var className = (_className = {
      inline: true,
      field: true,
      error: locals.hasError,
      disabled: locals.disabled
    }, _className['field-depth-' + locals.path.length] = true, _className['field-' + locals.path.join('-')] = locals.path.length > 0, _className);
    return _react2['default'].createElement(
      'div',
      { className: _classnames2['default'](className) },
      _react2['default'].createElement(
        'div',
        { className: 'ui checkbox' },
        checkbox.renderCheckbox(locals),
        checkbox.renderLabel(locals),
        checkbox.renderError(locals),
        checkbox.renderHelp(locals)
      )
    );
  };

  checkbox.clone = function clone() {
    var newOverrides = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    return create(_extends({}, overrides, newOverrides));
  };

  return checkbox;
}

exports['default'] = create();
module.exports = exports['default'];